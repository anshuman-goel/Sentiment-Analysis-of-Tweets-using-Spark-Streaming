[2017-01-19 08:57:14,075] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2017-01-19 08:57:59,019] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2017-01-19 08:57:59,035] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2017-01-19 08:57:59,043] INFO [Controller 0]: Controller 0 incremented epoch to 1 (kafka.controller.KafkaController)
[2017-01-19 08:57:59,046] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2017-01-19 08:57:59,066] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2017-01-19 08:57:59,067] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2017-01-19 08:57:59,068] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2017-01-19 08:57:59,070] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2017-01-19 08:57:59,071] INFO [Controller 0]: Partitions already reassigned: Set() (kafka.controller.KafkaController)
[2017-01-19 08:57:59,072] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2017-01-19 08:57:59,075] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2017-01-19 08:57:59,076] INFO [Controller 0]: List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2017-01-19 08:57:59,078] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-01-19 08:57:59,078] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2017-01-19 08:57:59,079] INFO [Controller 0]: Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2017-01-19 08:57:59,081] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2017-01-19 08:57:59,087] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2017-01-19 08:57:59,088] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2017-01-19 08:57:59,089] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2017-01-19 08:57:59,089] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2017-01-19 08:57:59,097] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2017-01-19 08:57:59,098] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2017-01-19 08:57:59,295] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-01-19 08:57:59,360] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2017-01-19 08:57:59,362] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2017-01-19 08:57:59,376] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2017-01-19 08:57:59,377] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2017-01-19 08:57:59,407] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to anshuman-Aspire-E5-571:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2017-01-19 08:58:04,100] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2017-01-19 08:58:04,106] DEBUG [Controller 0]: preferred replicas by broker Map() (kafka.controller.KafkaController)
[2017-01-19 08:59:40,806] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children twitterstream (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-01-19 08:59:40,817] INFO [TopicChangeListener on Controller 0]: New topics: [Set(twitterstream)], deleted topics: [Set()], new partition replica assignment [Map([twitterstream,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2017-01-19 08:59:40,817] INFO [Controller 0]: New topic creation callback for [twitterstream,0] (kafka.controller.KafkaController)
[2017-01-19 08:59:40,821] INFO [Controller 0]: New partition creation callback for [twitterstream,0] (kafka.controller.KafkaController)
[2017-01-19 08:59:40,822] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [twitterstream,0] (kafka.controller.PartitionStateMachine)
[2017-01-19 08:59:40,828] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2017-01-19 08:59:40,833] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [twitterstream,0] (kafka.controller.PartitionStateMachine)
[2017-01-19 08:59:40,834] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [twitterstream,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2017-01-19 08:59:40,836] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [twitterstream,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2017-01-19 08:59:40,889] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
